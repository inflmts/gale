#!/bin/sh
# start a terminal
#
# This file is part of Gale.
#

echo() { printf '%s\n' "$1"; }
diag() { printf >&2 '%s\n' "$1"; }
warn() { printf >&2 'warning: %s\n' "$1"; }
err() { printf >&2 'error: %s\n' "$1"; }

usage() {
  cat <<EOF
usage: term [-w|-x] [<command> [<args>...]]
options:
  -w      force wayland selection
  -x      force x11 selection
EOF
}

type=auto
while [ "$#" -gt 0 ]; do
  case $opt in
    --)
      shift
      break
      ;;
    -w)
      wayland
      ;;
    -x)
      x11
      ;;
    -*)
      err "invalid option: -$OPTARG"
      usage >&2
      exit 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

if [ "$TYPE" = auto ]; then
  if [ -n "$WAYLAND_DISPLAY" ]; then
    TYPE=wayland
  else
    TYPE=x
  fi
fi

is_wayland() {
  [ "$TYPE" = wayland ]
}

is_x() {
  [ "$TYPE" = x ]
}

has_command() {
  command -v "$1" >/dev/null 2>&1
}

unset TERMEXEC
if is_wayland; then
     TERMEXEC=$(galconf --get term.wayland) \
  || TERMEXEC=$(galconf --get term) \
  || unset TERMEXEC
else
     TERMEXEC=$(galconf --get term.x) \
  || TERMEXEC=$(galconf --get term) \
  || unset TERMEXEC
fi

# local configuration
if [ -n "${TERMEXEC+1}" ]; then
  exec sh -c "$TERMEXEC ${1+-e \$@}" term "$@"

# alacritty
elif has_command alacritty; then
  exec alacritty ${1+-e} "$@"

# foot
elif is_wayland && has_command foot; then
  exec foot -- "$@"

# urxvt
elif is_x && has_command urxvt; then
  exec urxvt ${1+-e} "$@"

# not found
else
  err "could not find viable terminal"
  exit 127
fi
