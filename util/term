#!/bin/sh
# term - start a terminal
#
# This file is part of Gale.
#

echo() { printf '%s\n' "$1"; }
diag() { printf >&2 '%s\n' "$1"; }
warn() { printf >&2 'warning: %s\n' "$1"; }
err() { printf >&2 'error: %s\n' "$1"; }

usage() {
  cat <<EOF
usage: term [-w|-x] [<command> [<args>...]]
options:
  -w      force wayland selection
  -x      force x11 selection
EOF
}

termtype=

while [ $# -gt 0 ]; do
  case $1 in
    --)
      shift
      break
      ;;
    -w)
      termtype=wayland
      ;;
    -x)
      termtype=x11
      ;;
    -*)
      err "invalid option: -$1"
      usage >&2
      exit 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

if [ -z "$termtype" ]; then
  if [ -n "$WAYLAND_DISPLAY" ]; then
    termtype=wayland
  else
    termtype=x11
  fi
fi

has_command() {
  command -v "$1" >/dev/null 2>&1
}

is_wayland() {
  [ "$termtype" = wayland ]
}

is_x11() {
  [ "$termtype" = x11 ]
}

no_term=
if is_wayland; then
     termexec=$(galconf get term.wayland) \
  || termexec=$(galconf get term) \
  || no_term=1
else
     termexec=$(galconf get term.x) \
  || termexec=$(galconf get term) \
  || no_term=1
fi

# local configuration
if [ -z "$no_term" ]; then
  exec sh -c "$TERMEXEC ${1+-e \$@}" term "$@"
fi

# alacritty
if has_command alacritty; then
  exec alacritty ${1+-e} "$@"
fi

# foot
if is_wayland && has_command foot; then
  exec foot -- "$@"
fi

# urxvt
if is_x && has_command urxvt; then
  exec urxvt ${1+-e} "$@"
fi

# not found
err "could not find viable terminal"
exit 127
