#!/bin/sh
# swaybar status generator

{
  i3status -c /dev/stdin <<EOF | sed -u '1,2d; s/^,//; s/^/1/' &
general {
  output_format = "i3bar"
  colors = true
  interval = 1
  markup = "pango"
}

order += "ethernet _first_"
order += "wireless _first_"
order += "cpu_usage"
order += "memory"
order += "disk /"
order += "volume master"
order += "time"

ethernet _first_ {
  format_up = "E: <b>%ip</b>"
  format_down = ""
}

wireless _first_ {
  format_up = "E: <b>%ip</b>"
  format_down = ""
}

cpu_usage {
  format = "CPU: <b>%usage</b>"
  format_above_degraded_threshold = "CPU? <b>%usage</b>"
  format_above_threshold = "CPU! <b>%usage</b>"
}

memory {
  memory_used_method = classical
  format = "Mem: <b>%percentage_used</b>"
  format_degraded = "Mem! <b>%percentage_used</b>"
  threshold_degraded = "10%"
}

disk / {
  format = "Disk: <b>%percentage_used</b> (%used/%total)"
}

volume master {
  format = "Vol: <b>%volume</b>"
  format_muted = "Mute: <b>%volume</b>"
}

time {
  format = "%a %Y %b %d <b>%I:%M %p</b>"
}
EOF
  pid1=$!

  { swaymsg -t get_tree \
      | jq -r --unbuffered 'recurse(.nodes[], .floating_nodes[]) | first(select(.focused)) | "focus:\(.id):\(.name)"'
    swaymsg -t subscribe -m '["window"]' \
      | jq -r --unbuffered '"\(.change):\(.container.id):\(.container.name)"'
  } | {
    IFS=:
    while read -r change id name; do
      if [ "$change" = focus ] || { [ "$change" = title ] && [ "$id" = "$lastid" ]; }; then
        lastid=$id
        printf '2%s\n' "$name"
      fi
    done
  } &
  pid2=$!

  trap 'kill "$pid1" "$pid2"' HUP INT QUIT PIPE TERM
  wait "$pid1" "$pid2"
} | {
  printf '{"version":1}\n['
  status='[]'
  title=
  while read -r line; do
    case $line in
      1*) status=${line#?} ;;
      2*) title=${line#?} ;;
    esac
    jq --arg title "$title" --argjson status "$status" -nc '[{ full_text: $title }] + $status'
    printf ,
  done
}
