#!/bin/sh
# configure - ninja build file generator

. util/sensei.sh

[ "$#" -gt 0 ] && die "configure accepts no arguments"

BUILDDIR=build
PREFIX="$HOME/.local"
BINDIR=
LIBDIR=
GALE_ENABLE_SYSTEMD=

# source local configuration from config.sh
has_config=
if [ -f config.sh ]; then
  . ./config.sh
  has_config=1
fi

BINDIR="${BINDIR:-$PREFIX/bin}"
LIBDIR="${LIBDIR:-$PREFIX/lib/gale}"

{ # ============================================================================
  # BEGIN NINJA FILE GENERATION

  echo '# ninja build file for Gale'
  echo
  var builddir % "$BUILDDIR"
  var homedir % "$HOME"
  var bindir % "$BINDIR"
  var libdir % "$LIBDIR"

  echo
  def configure './configure' \
    -description 'Configure Ninja' \
    -generator true
  use configure build.ninja -ii ${has_config:+config.sh} configure util/sensei.sh bin

  echo
  def make_gitignore 'echo \* > %out' \
    -description 'Generate Build Directory .gitignore'
  use make_gitignore %builddir/.gitignore

  echo
  var install_mode 644
  def install 'install -m %install_mode -T %in %out' \
    -description 'Install %out'

  echo
  use install %homedir/.profile -i lib/profile
  use install %homedir/.bashrc -i bash/bashrc
  use install %homedir/.bash_profile -i bash/login
  use install %homedir/.inputrc -i lib/inputrc
  use install %homedir/.vimrc -i vim/vimrc
  use install %homedir/.dialogrc -i lib/dialogrc
  use install %homedir/.screenrc -i lib/screenrc
  use install %homedir/.lesskey -i lib/lesskey

  echo
  for bin in bin/*; do
    if [ -f "$bin" ] && [ -x "$bin" ]; then
      use install %bindir/% "$(basename "$bin")" -i % "$bin" \
        -set install_mode 755
    fi
  done

  if test "$GALE_ENABLE_SYSTEMD"; then
    echo
    def make_env 'util/gen-env | install -m 644 -T /dev/stdin %out' \
      -description 'Generate systemd environment.d'
    use make_env %homedir/.config/environment.d/gale.conf -ii util/gen-env
  fi

  # END NINJA FILE GENERATION
  # ============================================================================
} > build.ninja.new

# if nothing went wrong, then
# overwrite build.ninja with the generated file
mv build.ninja.new build.ninja
