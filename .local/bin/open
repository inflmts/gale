#!/bin/sh
# ---
# ~/.local/bin/open
# ~/.local/bin/xdg-open
# ---
#
# xdg-open is a nightmare. gale-open is a drop-in replacement for xdg-open
# that's designed to be simple and explicit. It doesn't read any .desktop files
# or delegate to any desktop environment-specific handlers, instead all file
# associations are explicitly spelled out in the script. This offers more
# flexibility and control (and performance) at the expense of some manual work
# required to add new file types.

set -ue

progname=${0##*/}

err() { echo >&2 "$progname: $*"; }

usage() {
  cat <<EOF
usage: $progname [options] <file> | <url>

Options:
  -q, --query     print the command that would be run
  -b, --browser   open browser
      --help      show this help
      --version   display version information
EOF
}

if [ "$progname" = xdg-open ]; then
  # xdg-open is documented not to fork, so we follow that if invoked as xdg-open.
  # Some programs don't expect that, though, so in the future gale-open might
  # be changed to always fork a new process.
  exec=exec
else
  exec=fork
fi

browser=

while [ $# -gt 0 ]; do
  case $1 in
    -q|--query)
      exec=query
      ;;
    -b|--browser)
      browser=1
      ;;
    --help)
      usage
      exit 0
      ;;
    --version)
      echo gale-open
      exit 0
      ;;
    -*)
      err "unrecognized option: $1"
      exit 2
      ;;
    *)
      break
      ;;
  esac
  shift
done

if [ $# -ne 1 ]; then
  usage >&2
  exit 2
fi

file=$1

# utilities

has_command() {
  command -v "$1" > /dev/null 2>&1
}

try() {
  for id; do
    if eval "test -z \"\${tried_$id-}\""; then
      eval "tried_$id=1"
      "open_$id"
    fi
  done
}

query() {
  echo "$*"
  exit
}

fork() {
  setsid nohup "$@" <&- > /dev/null 2>&1 &
  exit
}

# applications

open_neovide() {
  if has_command neovide; then
    $exec neovide "$file"
  fi
}

open_neovim_qt() {
  if has_command nvim-qt; then
    $exec nvim-qt -- "$file"
  fi
}

open_nvim() {
  if has_command nvim; then
    $exec gale-term nvim "$file"
  fi
}

open_vim() {
  if has_command vim; then
    $exec gale-term vim "$file"
  fi
}

open_vi() {
  if has_command vi; then
    $exec gale-term vi "$file"
  fi
}

open_nano() {
  if has_command nano; then
    $exec gale-term nano "$file"
  fi
}

open_less() {
  if has_command less; then
    $exec gale-term less "$file"
  fi
}

open_swayimg() {
  if has_command swayimg; then
    $exec swayimg -- "$file"
  fi
}

open_imv_dir() {
  if has_command imv-dir; then
    $exec imv-dir "$file"
  fi
}

open_imv() {
  if has_command imv; then
    $exec imv "$file"
  fi
}

open_gimp() {
  if has_command gimp; then
    $exec gimp "$file"
  fi
}

open_mpv() {
  if has_command mpv; then
    $exec mpv --player-operation-mode=pseudo-gui -- "$file"
  fi
}

open_libreoffice() {
  if has_command libreoffice; then
    $exec libreoffice "$file"
  fi
}

open_lf() {
  if has_command lf; then
    $exec gale-term lf -- "$file"
  fi
}

open_nautilus() {
  if has_command nautilus; then
    $exec nautilus -- "$file"
  fi
}

open_chromium() {
  if has_command chromium; then
    $exec chromium "$file"
  fi
}

open_firefox() {
  if has_command firefox; then
    $exec firefox "$file"
  fi
}

# generic

open_browser() {
  try chromium firefox
}

open_image() {
  try swayimg imv_dir imv gimp browser
}

open_audio() {
  try mpv browser
}

open_video() {
  try mpv browser
}

#

if [ -n "$browser" ]; then
  try browser
  err "could not find browser to open '$file'"
  exit 127
fi

case ${file%%/*} in
  file:*)
    file=${file#*:}
    ;;
  http:*|https:*)
    try browser
    err "could not find browser to open '$file'"
    exit 127
    ;;
  prismlauncher:*)
    $exec prismlauncher "$file"
    ;;
  *:*)
    err "unrecognized schema '${file%%:*}'"
    exit 127
    ;;
esac

if [ ! -e "$file" ]; then
  err "file does not exist: $file"
  exit 1
fi

if [ -d "$file" ]; then
  try lf nautilus
  cd "$file"
  $exec gale-term
fi

# match file extension
case ${file##*.} in
  avif | bmp | gif | jpeg | jpg | png | webp)
    try image
    ;;
  flac | mp3 | ogg | opus | wav)
    try audio
    ;;
  avi | mov | mp4 | webm | wmv)
    try video
    ;;
  html | md | pdf | svg)
    try browser
    ;;
  odt | odp | ods | doc | docx | ppt | pptx | xls | xlsx)
    try libreoffice
    ;;
esac

try neovide neovim_qt nvim vim vi nano less

err "could not find a way to open '$file', sorry"
exit 127
