#!/bin/sh
# host-specific configurator

err() { printf >&2 'error: %s\n' "$1"; }
warn() { printf >&2 'warning: %s\n' "$1"; }

usage() {
  cat <<EOF
usage:
  config <key>[=<value>]...
    modify configuration
  config -g|--get <key>...
    get first occurrence of any of <key>
  config -t|--test <key>...
    test for any of <key>
  config -l|--list
    dump configuration
options:
  --reset     wipe the config file
  --debug     show debugging output
EOF
}

config_dir="${XDG_CONFIG_HOME:-$HOME/.config}/corecon"
config_file="$config_dir/config"
config_file_old="$config_file.old"

mode=
reset=
debug=

while [ "$#" -gt 0 ]; do
  case "$1" in
    --help)
      usage
      exit 0
      ;;
    -g|--get)
      mode=get
      ;;
    -t|--test)
      mode=test
      ;;
    -l|--list)
      mode=list
      ;;
    --reset)
      reset=1
      ;;
    --debug)
      debug=1
      ;;
    --)
      shift
      break
      ;;
    -*)
      err "invalid option: $1"
      exit 1
      ;;
    *)
      break
      ;;
  esac
  shift
done

get_mode() {
  [ "$#" -gt 0 ] && [ -f "$config_file" ] || exit 1

  # a `grep -Ex` pattern for finding a match
  pattern="$(printf '%s\n' "$@" | sed -E '
s/[\.\^\$\?\*\+\[\{\(\)\|\\]/\\&/g
s/$/=.*/')"

  [ "$debug" ] && printf 'pattern:\n%s\n' "$pattern"

  match="$(grep -Exm 1 "$pattern" "$config_file")" && \
    printf '%s\n' "${match#*=}"
}

test_mode() {
  [ "$#" -gt 0 ] && [ -f "$config_file" ] || exit 1

  # a `grep -Ex` pattern for finding a match
  pattern="$(printf '%s\n' "$@" | sed -E '
s/=.*//
s/[\.\^\$\?\*\+\[\{\(\)\|\\]/\\&/g
s/$/(=.*)?/')"

  [ "$debug" ] && printf 'pattern:\n%s\n' "$pattern"

  grep -Exq "$pattern" "$config_file"
}

list_mode() {
  cat "$config_file"
}

modify_mode() {
  # only proceed if arguments are present
  # or requesting a --reset
  [ "$#" -gt 0 ] || [ "$reset" ] || exit 0

  # backup config file
  if [ -e "$config_file" ]; then
    mv "$config_file" "$config_file_old"
  fi

  mkdir -p "$config_dir"

  { # unless requesting a --reset,
    # edit existing configuration
    if [ -z "$reset" ]; then
      # a `grep -Ex` pattern for finding a match
      remove_pattern="$(printf '%s\n' "$@" | sed -E '
s/=.*//
s/[\.\^\$\?\*\+\[\{\(\)\|\\]/\\&/g
s/$/(=.*)?/')"

      if [ "$debug" ]; then
        printf >&2 'remove_pattern:\n%s\n' "$remove_pattern"
      fi

      grep -Exv "$remove_pattern" "$config_file_old"
    fi

    # add new entries
    [ "$#" -gt 0 ] && printf '%s\n' "$@"
  } > "$config_file"
}

case "$mode" in
  get) get_mode "$@" ;;
  test) test_mode "$@" ;;
  list) list_mode "$@" ;;
  *) modify_mode "$@" ;;
esac
