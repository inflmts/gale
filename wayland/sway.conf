# sway config file
#
# This file is part of Gale.
#
# Documentation:
# - <https://github.com/swaywm/sway/wiki>
# - sway(5)
# - sway-input(5)
# - sway-output(5)
# - sway-bar(5)
#
# Dependencies:
# - foot
# - nnn
# - jq (optional)
# - pamixer (optional)
#

# GENERAL
# ==============================================================================

set $mod Mod4
set $term foot
set $termexec foot
set $explorer foot n3

# COLORS

# type                  border    backgr    text      [indic]
client.focused          #ffffff   #ffffff   #000000   #ff0000
client.focused_inactive #777777   #777777   #ffffff
client.unfocused        #555555   #555555   #ffffff

smart_borders on
default_border pixel 1
default_floating_border pixel 1

# calcurse
for_window [app_id="^calcurse$"] floating enable, \
  move position 100 ppt 100 ppt, \
  move left 850, move up 550
bindsym $mod+c exec foot -w 800x500 -a calcurse calcurse

# calc
for_window [app_id="^calc$"] floating enable, \
  move position 100 ppt 50, \
  move left 650
mode "extra" \
  bindsym c exec foot -w 600x400 -a calc calc; mode "default"

# INPUTS
# ==============================================================================
# See sway-input(5)

input type:keyboard {
  repeat_delay 300
  repeat_rate 25
}

floating_modifier $mod

# OUTPUTS
# ==============================================================================
# See sway-output(5)

# generated by sway-output-mode
include $XDG_RUNTIME_DIR/gale/sway-output-mode.conf

# KEY BINDINGS
# ==============================================================================

# -- GENERAL --

# close any window
bindsym $mod+q kill

# reload the configuration file
bindsym $mod+r reload

# start a terminal
bindsym $mod+Return exec $term

# start a file explorer
bindsym $mod+e exec $explorer

# -- CONTAINERS --

# focus the parent container
bindsym $mod+a focus parent

# focus most recent child container
bindsym $mod+Shift+a focus child

# focus container
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move container
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# -- WORKSPACES & OUTPUTS --

# focus workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1 ; workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2 ; workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3 ; workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4 ; workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5 ; workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6 ; workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7 ; workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8 ; workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9 ; workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10

# focus empty workspace
# requires jq
bindsym $mod+grave exec \
  num=$(swaymsg -t get_workspaces | jq -re '[range(1;11)] - map(.num) | first') && \
  swaymsg "workspace number $num"
# move focused container to empty workspace
bindsym $mod+Shift+grave exec \
  num=$(swaymsg -t get_workspaces | jq -re '[range(1;11)] - map(.num) | first') && \
  swaymsg "move container to workspace number $num; workspace number $num"

# focus output
bindsym $mod+bracketleft focus output left
bindsym $mod+bracketright focus output right

# move focused workspace to output
bindsym $mod+Shift+bracketleft move workspace to output left
bindsym $mod+Shift+bracketright move workspace to output right

# -- LAYOUT --

# change container split
bindsym $mod+b splith
bindsym $mod+v splitv

# switch the current container between different layout styles
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+b layout splith
bindsym $mod+Shift+v layout splitv

# toggle fullscreen for focused container
bindsym $mod+f fullscreen

# toggle the focused container between tiling/floating
bindsym $mod+Shift+Space floating toggle

# change focus between tiling/floating area
bindsym $mod+Space focus mode_toggle

# -- VOLUME --

# volume is changed using pamixer
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym Shift+XF86AudioLowerVolume exec pamixer --set-volume 0
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym Shift+XF86AudioRaiseVolume exec pamixer --set-volume 100
bindsym XF86AudioMute exec pamixer -t

# -- COMMAND MODE --

bindsym $mod+Shift+c mode "command"

mode "command" {
  bindsym q mode "default"
  bindsym Escape mode "default"

  bindsym e exit
  bindsym s nop wait for suspend
  bindsym o nop wait for poweroff
  bindsym r nop wait for reboot
  bindsym --release s mode "default"; exec systemctl suspend
  bindsym --release o mode "default"; exec systemctl poweroff
  bindsym --release r mode "default"; exec systemctl reboot
}

# -- RESIZE MODE --

bindsym $mod+z mode "resize"

mode "resize" {
  bindsym q mode "default"
  bindsym Escape mode "default"

  # grow using direction keys
  bindsym h resize grow left 10px
  bindsym j resize grow down 10px
  bindsym k resize grow up 10px
  bindsym l resize grow right 10px

  # shrink using shift + direction keys
  bindsym Shift+h resize shrink right 10px
  bindsym Shift+j resize shrink up 10px
  bindsym Shift+k resize shrink down 10px
  bindsym Shift+l resize shrink left 10px
}

# -- EXTRA MODE --

bindsym $mod+x mode "extra"

mode "extra" {
  bindsym q mode "default"
  bindsym Escape mode "default"

  bindsym f exec firefox; mode "default"
  bindsym m exec multimc; mode "default"
  bindsym t exec $termexec htop; mode "default"
  bindsym Shift+r exec $termexec radeontop; mode "default"
}

# STATUS BAR
# ==============================================================================
# See sway-bar(5)

bar {
  status_command ~/.gale/wayland/swaystatus
  status_edge_padding 5

  position bottom
  font Exo 2 11
  workspace_min_width 30
  separator_symbol " | "

  colors {
    statusline #ffffff
    background #222222

    # type              border    backgr    text
    focused_workspace   #ffffff   #ffffff   #000000
    active_workspace    #777777   #777777   #ffffff
    inactive_workspace  #555555   #555555   #ffffff
    binding_mode        #ff0000   #ff0000   #ffffff
  }
}

# INITIALIZATION
# ==============================================================================

# automatically sleep after a while
exec wautosleep up

# Include local configuration from $XDG_CONFIG_HOME/sway/local.conf. Paths to
# 'include' are relative to the parent config, which in this case should be
# $XDG_CONFIG_HOME/sway/config.
include local.conf

# vim:ft=i3config
